[{"C:\\Dev\\DbSwapPOC\\ui\\src\\index.js":"1","C:\\Dev\\DbSwapPOC\\ui\\src\\App.js":"2","C:\\Dev\\DbSwapPOC\\ui\\src\\components\\FormContainer\\index.js":"3","C:\\Dev\\DbSwapPOC\\ui\\src\\components\\FormContainer\\styles.js":"4","C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\login-register\\index.js":"5","C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\login-register\\styles.js":"6","C:\\Dev\\DbSwapPOC\\ui\\src\\services\\AuthService.js":"7","C:\\Dev\\DbSwapPOC\\ui\\src\\AppSettings.js":"8","C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\home\\index.js":"9","C:\\Dev\\DbSwapPOC\\ui\\src\\components\\NavMenu\\index.js":"10","C:\\Dev\\DbSwapPOC\\ui\\src\\components\\NavMenu\\styles.js":"11","C:\\Dev\\DbSwapPOC\\ui\\src\\contexts\\AuthContext.js":"12","C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\departments\\index.js":"13","C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\employees\\index.js":"14","C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\employees\\styles.js":"15","C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\departments\\styles.js":"16","C:\\Dev\\DbSwapPOC\\ui\\src\\services\\DepartmentService.js":"17","C:\\Dev\\DbSwapPOC\\ui\\src\\services\\EmployeeService.js":"18","C:\\Dev\\DbSwapPOC\\ui\\src\\services\\DbTypeService.js":"19","C:\\Dev\\DbSwapPOC\\ui\\src\\components\\GuardedComponent\\index.js":"20","C:\\Dev\\DbSwapPOC\\ui\\src\\components\\RefreshButton\\index.js":"21","C:\\Dev\\DbSwapPOC\\ui\\src\\components\\ErrorMessage\\index.js":"22","C:\\Dev\\DbSwapPOC\\ui\\src\\contexts\\DbSettingsContext.js":"23"},{"size":268,"mtime":1607467234697,"results":"24","hashOfConfig":"25"},{"size":1804,"mtime":1609684829086,"results":"26","hashOfConfig":"25"},{"size":272,"mtime":1607445634993,"results":"27","hashOfConfig":"25"},{"size":363,"mtime":1609677923499,"results":"28","hashOfConfig":"25"},{"size":3639,"mtime":1610364366548,"results":"29","hashOfConfig":"25"},{"size":1593,"mtime":1609677769766,"results":"30","hashOfConfig":"25"},{"size":1856,"mtime":1608224473634,"results":"31","hashOfConfig":"25"},{"size":99,"mtime":1607438168238,"results":"32","hashOfConfig":"25"},{"size":462,"mtime":1607560756187,"results":"33","hashOfConfig":"25"},{"size":3349,"mtime":1609686450183,"results":"34","hashOfConfig":"25"},{"size":265,"mtime":1609676993418,"results":"35","hashOfConfig":"25"},{"size":111,"mtime":1607438106148,"results":"36","hashOfConfig":"25"},{"size":2186,"mtime":1610120524013,"results":"37","hashOfConfig":"25"},{"size":2318,"mtime":1610120551432,"results":"38","hashOfConfig":"25"},{"size":450,"mtime":1609673987694,"results":"39","hashOfConfig":"25"},{"size":452,"mtime":1609673976502,"results":"40","hashOfConfig":"25"},{"size":311,"mtime":1609674910469,"results":"41","hashOfConfig":"25"},{"size":326,"mtime":1607462480681,"results":"42","hashOfConfig":"25"},{"size":521,"mtime":1609685535391,"results":"43","hashOfConfig":"25"},{"size":428,"mtime":1608213504971,"results":"44","hashOfConfig":"25"},{"size":322,"mtime":1609673535275,"results":"45","hashOfConfig":"25"},{"size":406,"mtime":1609676319909,"results":"46","hashOfConfig":"25"},{"size":121,"mtime":1609684769351,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1i5col9",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Dev\\DbSwapPOC\\ui\\src\\index.js",[],["96","97"],"C:\\Dev\\DbSwapPOC\\ui\\src\\App.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\components\\FormContainer\\index.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\components\\FormContainer\\styles.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\login-register\\index.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\login-register\\styles.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\services\\AuthService.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\AppSettings.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\home\\index.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\components\\NavMenu\\index.js",["98","99"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport DbTypeService from '../../services/DbTypeService';\r\n\r\nimport {\r\n  StyledNavbar,\r\n  StyledText,\r\n} from './styles';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport logo from '../../assets/logo.png';\r\n\r\nimport AuthService from '../../services/AuthService';\r\nimport AuthContext from '../../contexts/AuthContext';\r\nimport DbSettingsContext from '../../contexts/DbSettingsContext';\r\n\r\nconst NavMenu = () => {\r\n\r\n  const history = useHistory();\r\n  const { setLoggedIn } = useContext(AuthContext);\r\n  const { dbOptions, setDbOptions } = useContext(DbSettingsContext);\r\n  const [databaseType, setDatabaseType] = useState();\r\n\r\n  const handleChangeDatabaseType = async (dbType) => {\r\n    if (window.confirm(`Change database to ${dbType}?`)) {\r\n      await DbTypeService.setDatabaseType(dbType);\r\n      setDatabaseType(dbType);\r\n      setDbOptions({ ...dbOptions, dbType });\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    AuthService.logout();\r\n    setLoggedIn(false);\r\n    history.push('/');\r\n  }\r\n\r\n  const loadCurrentDbOptions = async () => {\r\n    try {\r\n      const data = await DbTypeService.getDatabaseOptions();\r\n      setDbOptions(data);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadCurrentDbOptions();\r\n  }, [databaseType]);\r\n\r\n  useEffect(() => {\r\n    loadCurrentDbOptions();\r\n  }, []);\r\n\r\n  const textColor = '#ddd';\r\n\r\n  return (\r\n    <StyledNavbar expand=\"lg\">\r\n      <Navbar.Brand href=\"/\" style={{ color: textColor }}>\r\n        <img src={logo} alt=\"Logo\" height=\"35\" />\r\n        <span style={{ marginLeft: 10 }}>DB Migration</span>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav pull-right\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link \r\n            onClick={() => history.push('/departments')}\r\n            style={{ color: textColor }}>Departments</Nav.Link>\r\n          <Nav.Link \r\n            onClick={() => history.push('/employees')}\r\n            style={{ color: textColor }}>Employees</Nav.Link>\r\n        </Nav>\r\n        <Navbar.Text style={{color: 'white', marginRight: 20 }}>{dbOptions.dbName}@{dbOptions.dbServer}</Navbar.Text>\r\n        <Nav>\r\n          <NavDropdown title={<StyledText>Databases</StyledText>} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item \r\n              active={databaseType === 'SQL_SERVER'} \r\n              href=\"#\" \r\n              onClick={() => handleChangeDatabaseType('SQL_SERVER')}>\r\n                SQL Server\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item \r\n              href=\"#\" \r\n              active={databaseType === 'POSTGRES'}\r\n              onClick={() => handleChangeDatabaseType('POSTGRES')}>\r\n                PostgreSQL\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Nav>\r\n          <NavDropdown title={<StyledText>Menu</StyledText>} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#\" onClick={handleLogout}>Logout</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </StyledNavbar>\r\n  )\r\n}\r\n\r\nexport default NavMenu;","C:\\Dev\\DbSwapPOC\\ui\\src\\components\\NavMenu\\styles.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\contexts\\AuthContext.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\departments\\index.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\employees\\index.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\employees\\styles.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\pages\\departments\\styles.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\services\\DepartmentService.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\services\\EmployeeService.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\services\\DbTypeService.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\components\\GuardedComponent\\index.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\components\\RefreshButton\\index.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\components\\ErrorMessage\\index.js",[],"C:\\Dev\\DbSwapPOC\\ui\\src\\contexts\\DbSettingsContext.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":51,"column":6,"nodeType":"106","endLine":51,"endColumn":20,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"105","line":55,"column":6,"nodeType":"106","endLine":55,"endColumn":8,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCurrentDbOptions'. Either include it or remove the dependency array.","ArrayExpression",["111"],["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [databaseType, loadCurrentDbOptions]",{"range":"117","text":"118"},"Update the dependencies array to be: [loadCurrentDbOptions]",{"range":"119","text":"120"},[1478,1492],"[databaseType, loadCurrentDbOptions]",[1553,1555],"[loadCurrentDbOptions]"]